# Common
common.src=Redmine
common.dst=Backlog
common.projects=projects
common.users=users
common.statuses=statuses
common.priorities=priorities
common.yes=Yes
common.no=No
common.user=User
common.project=Project
common.done_ratio=% done
common.comment=Comment
common.parent_page=Parent page
common.parent_issue=Parent issue
common.wikis=wikis
common.custom_field=custom field
common.trackers=trackers
common.project_user=project users
common.category=category
common.news=news
common.issues=issues
common.issues_info=issues information
common.version=version
common.groups=groups
common.issue_type=issue type
common.result_success=SUCCESSFUL
common.result_failed=FAILED:{0,number,#}
common.empty=empty
common.relation=Related issue
common.private=Private
common.change_comment={0}: {1} -> {2}
common.anonymous=Anonymous
common.link=Link
common.access_key=Access Key
common.project_key=Project Key
common.importOnly=Only Import
common.url=URL
common.retryCount=Maximum number of retries
common.deleted=(deleted)

# Message
message.exporting=Exporting
message.exported=Exported
message.importing=Importing
message.imported=Imported
message.execute=Execute {1} {0}.({2,number,#})
message.executed={0} {1}.
message.progress.executed={0} {1}.
message.progress.value=({0,number,#}/{1,number,#})
message.analyzing=Analyzing
message.analyzed=Analyzed
message.collecting=Collecting
message.collected=Collected


# Mapping
mapping.status.backlog.open=Open
mapping.status.backlog.in_progress=In Progress
mapping.status.backlog.resolved=Resolved
mapping.status.backlog.closed=Closed
mapping.status.redmine.new=New
mapping.status.redmine.in_progress=InProgress
mapping.status.redmine.resolved=Resolved
mapping.status.redmine.feedback=Feedback
mapping.status.redmine.closed=Closed
mapping.status.redmine.rejected=Rejected
mapping.priority.backlog.low=Low
mapping.priority.backlog.normal=Normal
mapping.priority.backlog.high=High
mapping.priority.redmine.low=Low
mapping.priority.redmine.normal=Normal
mapping.priority.redmine.high=High
mapping.priority.redmine.urgent=Urgent
mapping.priority.redmine.immediate=Immediate


# CLI
cli.confirm=Start migration? (y/n [n]):
cli.require_java8=The current version of Java is "{0}". Java 8 is required for this program.
cli.help.projectKey=Your Redmine project identifier.(required) Example:--projectKey [your redmine project identifier1]:[your backllog project key]
cli.confirm_recreate=The mapping file {0} already exists. Do you want to overwrite it? (y/n [n]):
cli.backlog_project_already_exist=Project "{0}" already exists. Do you want to import issues and wikis to project "{0}"? (Check the README file for details.)  (y/n [n]):
cli.error.unknown=Unknown error
cli.cancel=Import has been canceled.
cli.invalid_setup=Setup is incomplete. Please complete the set up with the sub-command "init". Add "--help" option to know about the "init" command.
cli.warn.not.latest=The latest version [{0}] has been released. The current version is [{1}].
cli.warn.rate_limit=The API usage limit has been exceeded. Waiting 1 minute before resuming.


# CLI Help
cli.help=help=Run `java -jar backlog-migration-redmine-[latest version].jar --help` command for help
cli.help.sample_command=\nSample command:\n\nInit:The "init" command create a mapping file.\n\njava -jar backlog-migration-redmine-[latest version].jar init \\\n--redmine.url [your Redmine URL] \\\n--redmine.key [your Redmine API access key] \\\n--backlog.url [your Backlog URL] \\\n--backlog.key [your Backlog API access key] \\\n--projectKey [your project identifier]\n\nExecute:The "execute" command execute migration.\n\njava -jar backlog-migration-redmine-[latest version].jar execute \\\n--redmine.url [your Redmine Url] \\\n--redmine.key [your Redmine API access key] \\\n--backlog.url [your backlog url] \\\n--backlog.key [your backlog api access key] \\\n--projectKey [your project identifier]\n
cli.help.show_help=Show help message
cli.help.show_version=Show version of this program
cli.help.backlog.key=Your Backlog api access key (required) Example:--backlog.key [your backlog API access key]
cli.help.backlog.url=Your Backlog url (required) Example:--backlog.url [your backlog url]
cli.help.redmine.key=Your Redmine api access key (required) Example:--redmine.key [your redmine API access key]
cli.help.redmine.url=Your Redmine URL (required) Example:--redmine.url [your redmine url]
cli.help.exclude=Do not migrate the specified items.[issue,wiki]
cli.help.importOnly=If you set this option, only import will be run by the program.
cli.help.retryCount=Maximum number of retries when an error occurs.

# CLI Validate Param
cli.param.error=The parameter has the following error.
cli.param.check.access=Checking whether the {0} is accessible ...
cli.param.ok.access={0} is available.
cli.param.check.admin=Checking for the presence of admin role ...
cli.param.ok.admin=That is OK!
cli.param.get.project=Getting the {0} project ...
cli.param.error.auth.not.auth=You do not have the necessary authority to migrate Redmine. System administrator authority is required.:[{0}]
cli.param.error.auth=Accessing {0} failed due to an authorization error.\n  Please make sure the API access key is valid and the REST API service is enabled on the server.
cli.param.error.auth.backlog=Backlog API key is not administrator authority. Please use API key of administrator authority.
cli.param.error.disable.project=The project [{0}] could not be loaded.
cli.param.error.disable.access=The accessing {0} failed. Please check the url or api access key.
cli.param.error.disable.host=The accessing {0} failed. [{1}] is unknown host.
cli.param.error.project_key=The project key [{0}] is incorrect.(Uppercase letters (A-Z), numbers (0-9) and underscore (_) can be used.)


# CLI Mapping
cli.mapping.delete_status=Deleted status[{0}]
cli.mapping.error.broken_file=The mapping file {0} is broken.
cli.mapping.fix_file="{0}" needs to be fixed.\nTo recreate, run the sub-command "init".
cli.mapping.show=The mapping {0} is as follows.
cli.mapping.error=The mapping of {0} has the following error.
cli.mapping.configurable=The values accepted for {0} in Backlog are "{1}".
cli.mapping.error.not_exist.item=The {0}[{1}] is not registered in destination {2}.
cli.mapping.error.not_defined.item={0} [{1}] required for migration is not defined in mapping file [{2}].
cli.mapping.error.empty.item=Corresponding item for {0} "{1}" in {2} is not specified.
cli.mapping.output_file=The mapping file about {0} is created. Check the mapping file and fix it if necessary.
cli.mapping.merge_file=The following {0} was added to the mapping file of {0}. Check the mapping file and fix it if necessary.
cli.mapping.no_change=There was no change in the mapping file of {0}.


# CLI Project Info
cli.project_info.start=Collect the associated information with the project.
cli.project_info.finish=Completed collecting the associated information with the project.


# Export
export.start=Start export.
export.finish=Export completed.


# Import
import.start=Start import.
import.finish=Import completed.
import.suspend=It will suspend the import.
import.remaining_time=[Remaining time:{0}]
import.issue.already_exists=The issue [{0}] is skipped because it has already been registered.
import.issue.create_dummy=Created dummy issue.:{0}
import.progress=Progress...({0,number,#}/{1,number,#})
import.date.execute={2} {1} about {0}.
import.error.wiki.attachment=Failed to attachment to wiki [{0}]. :{1}
import.error.limit.project=You can not import [{0}] of project.\nYou can not add more project, please upgrade your plan.
import.error.project.not.join=You dont join [{0}]. If you want to move this project, you need to join this project.
import.error.issue.attachment=Attachment file [{0}] upload failed. :{1}
import.error.attachment.too_large=Attachment file upload failed. The size of attached file is too large.:{0}
import.error.attachment.not_exists=Attachment file {0} upload failed.\nFile does not exist in {1}.
import.error.failed.import=Could not register project [{0}]. : {1}
import.error.failed.comment=Could not register comment on issue [{0}]. : {1}

# Destroy
destroy.help.dryRun=It doesn't delete the assignment, only the test.
destroy.start=Start destroy all issues.
destroy.start.dryRun=Start dry run.
destroy.confirm=Please enter project key:
destroy.confirm.fail=Input project key is wrong.
destroy.issue.deleted=Deleted issue: {0} {1}
destroy.finish=Destroy completed.
destroy.finish.dryRun=Dry run completed.
